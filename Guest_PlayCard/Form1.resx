<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABjAEgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        tPjl8cvAP7DXwE1/x5481+90HwToNy15qWpXr3urPateXoAAAE03l+fcqiRoNkKFURUijVV858O/8Fa/
        2ffEfjzwz4Z/4T6TS9a8XXj6Zp0GtaBqejr9tW4u7b7FNJd28SW10Z7K5iW3naOV3jCqjF0DcL/wX60H
        R/FX/BKX4iaX4i11vC/h3UtV8M2uq60tm96dHtH8R6Ys135CEPN5UZaTy0IZ9m0ckV+JWr+MfAem/sw/
        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
</value>
  </data>
</root>